
@model SkateBoard.Models.Customer
@{
    ViewBag.Title = "Register";

}

@*<h2>Register</h2>*@

<style>

    <style >

    body {
        overflow-y: hidden;
    }

    body,
    .signin {
        background-color: #d3d3d3;
        font-family: 'Montserrat', sans-serif;
        color: #fff;
        font-size: 14px;
        letter-spacing: 1px;
    }

    .login {
        position: relative;
        height: 560px;
        width: 405px;
        margin: auto;
        padding: 60px 60px;
        background: url(/img/Skateboard-Blogs.jpg) no-repeat center center #505050;
        background-size: cover;
        box-shadow: 0px 30px 60px -5px #000;
        margin-top: -2%;
        margin-top: 20px;
    }

    form {
        padding-top: 80px;
    }

    .active {
        border-bottom: 2px solid #1161ed;
    }

    .nonactive {
        color: rgba(255, 255, 255, 0.2);
    }

    h2 {
        padding-left: 12px;
        font-size: 22px;
        text-transform: uppercase;
        padding-bottom: 5px;
        letter-spacing: 2px;
        display: inline-block;
        font-weight: 100;
    }

        h2:first-child {
            padding-left: 0px;
        }

    span {
        text-transform: uppercase;
        font-size: 12px;
        opacity: 1.8;
        display: inline-block;
        position: relative;
        top: -134px;
        transition: all 0.5s ease-in-out;
    }

    .text {
        border: none;
        width: 89%;
        padding: 10px 20px;
        display: block;
        height: 15px;
        border-radius: 20px;
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(255, 255, 255, 0);
        overflow: hidden;
        margin-top: 15px;
        transition: all 0.5s ease-in-out;
    }

        .text:focus {
            outline: 0;
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 20px;
            background: rgb(0 0 0 / 34%);
        }

            .text:focus + span {
                opacity: 6;
            }

    input[type="text"],
    input[type="password"] {
        font-family: 'Montserrat', sans-serif;
        color: #fff;
    }



    input {
        -webkit-appearance: none;
        background-color: rgba(255, 255, 255, 0.1);
        padding: 8px;
        border-radius: 2px;
        display: inline-block;
        position: relative;
        top: -70px;
        border-radius: 36%;
        width: 90%;
        padding: 0px 20px;
        display: block;
        height: 36px;
        border-radius: 20px;
    }

    h2,
    span,
    .custom-checkbox {
        margin-left: 20px;
    }

    .custom-checkbox {
        -webkit-appearance: none;
        background-color: rgba(255, 255, 255, 0.1);
        padding: 8px;
        border-radius: 2px;
        display: inline-block;
        position: relative;
        top: 6px;
    }

        .custom-checkbox:checked {
            background-color: rgba(17, 97, 237, 1);
        }

            .custom-checkbox:checked:after {
                content: '\2714';
                font-size: 10px;
                position: absolute;
                top: 1px;
                left: 4px;
                color: #fff;
            }

        .custom-checkbox:focus {
            outline: none;
        }

    label {
        display: inline-block;
        padding-top: 10px;
        padding-left: 5px;
    }

    .signin {
        background-color: #1161ed;
        color: #FFF;
        width: 100%;
        padding: 10px 20px;
        display: block;
        height: 39px;
        border-radius: 20px;
        margin-top: 30px;
        transition: all 0.5s ease-in-out;
        border: none;
        text-transform: uppercase;
    }

        .signin:hover {
            background: #4082f5;
            box-shadow: 0px 4px 35px -5px #4082f5;
            cursor: pointer;
        }

        .signin:focus {
            outline: none;
        }

    hr {
        border: 1px solid rgba(255, 255, 255, 0.1);
        top: 85px;
        position: relative;
    }

    a {
        text-align: center;
        display: block;
        top: 120px;
        position: relative;
        text-decoration: none;
        color: rgba(255, 255, 255, 0.2);
    }

    .text {
        color: black;
        font-weight: 600;
    }

    .sign-up > a {
        font-weight: 600;
        left: 68%;
        opacity: 20;
        color: white;
        top: -14px;
    }

    .navbar {
        display: none;
    }

    input:focus {
        outline: none;
        background-color: wheat;
    }


    .sign {
        margin-top: -54px !important;
    }

    .field-validation-error {
        display: none;
    }
</style>



<div class="login">
    <h2 class="active"> Register </h2>
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true,"", new { @class = "text-danger" })
        <form>

            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control text" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            <span>username</span>
            @if (ViewBag.error != null)
            {
                <span class="badge badge-danger">@ViewBag.error</span>

            }
            <br>

            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control text" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            <span>password</span>


            <br>

            @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @class = "form-control text" } })
            @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
            <span>Full Name</span>
            <br>

            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control text" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            <span>Address</span>
            <br>

            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            <span>Email</span>
            <br>

            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control text" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            <span>Phone</span>
            <br>

            <button class="signin sign">
                Sign Up
            </button>


        </form>
    }

</div>

